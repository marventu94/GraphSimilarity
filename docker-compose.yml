version: "3.9"

networks:
  internal_network:
    driver: bridge

services:
  auth_service:
    build:
      context: ./auth_service
    image: auth_service_image
    container_name: auth_service
    ports:
      - "5000:5000"
    networks:
      - internal_network
    environment:
      - LOGGER_SERVICE_URL=http://logger_service:5002/log-and-process
      - MONGO_USERNAME=root
      - MONGO_PASSWORD=rootpassword
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
    depends_on:
      - mongodb

  logger_service:
    build:
      context: ./logger_service
    image: logger_service_image
    container_name: logger_service
    command: python3 app.py
    ports:
      - "5002:5002"
    networks:
      - internal_network
    volumes:
      - ./logs:/app/logs
    environment:
      - CACHE_SERVICE_URL=http://cache_service:5001/detect-similarity

  cache_service:
    build:
      context: ./cache_service
    image: cache_service_image
    container_name: cache_service
    environment:
      - REDIS_HOST=redis
      - NEURAL_SERVICE_URL=http://neural_service:5003/process
    networks:
      - internal_network
    depends_on:
      - redis

  neural_service:
    build:
      context: ./neural_service
    image: neural_service_image
    container_name: neural_service
    command: bash -c "cd /app && python3 app.py"
    ports:
      - "5003:5003"
    networks:
      - internal_network

  redis:
    image: redis:7
    container_name: redis-gs
    ports:
      - "6379:6379"
    networks:
      - internal_network
    command: ["redis-server"]

  mongodb:
    image: mongo:8.0.3-noble
    container_name: mongodb
    restart: always
    networks:
      - internal_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - "27017:27017"